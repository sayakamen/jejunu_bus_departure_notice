# 버스 시간표 데이터
#시간표 크롤링 어려우니 http://bus.jeju.go.kr/search/line?searchText={버스번호} 에서 손으로 추출해와야함

from flask import Flask, render_template, jsonify
from datetime import datetime
import pytz

@app.route('/') #서버의 시간과 한국 시간이 달라 올바르지 않은 버스가 표시되기에 서울시간으로 변경
def index():
    seoul_tz = pytz.timezone('Asia/Seoul')
    current_time = datetime.now(seoul_tz).strftime("%Y-%m-%d %H:%M:%S")
    return f"현재 서울 시간: {current_time}"

app = Flask(__name__)

시간표 = {
# 제주시 서부
    "270":
    ["07:00", "08:00", "08:50", "09:10", "09:40", "10:00", "10:40",
    "11:30", "12:30", "13:00", "13:30", "14:00", "14:30", "15:10",
    "16:00", "16:30", "17:00", "17:30", "18:10", "18:40", "19:30",
    "20:00", "20:40", "21:00", "21:20", "21:40"],
    
    "293":
    ["08:00", "10:00", "12:10", "14:10", "16:10", "17:30", "19:00"],

    "302": 
    ["06:14", "06:34", "06:50", "07:04", "07:15", "07:34", "07:49", 
    "08:05", "08:20", "08:36", "08:50", "09:05", "09:21", "09:35",
    "09:50", "10:06", "10:20", "10:35", "10:51", "11:05", "11:20",
    "11:36", "11:50", "12:05", "12:21", "12:35", "12:50", "13:06",
    "13:20", "13:35", "13:51", "14:05", "14:20", "14:36", "14:50",
    "15:05", "15:21", "15:35", "15:50", "16:06", "16:20", "16:35",
    "16:51", "17:05", "17:20", "17:36", "17:50", "18:05", "18:21",
    "18:35", "18:50", "19:06", "19:20", "19:35", "19:51", "20:05",
    "20:20", "20:36", "20:50", "21:05", "21:21", "21:35", "21:50",
    "22:06", "22:20"], 

    "355":
    ["06:45", "07:10", "07:24", "07:45", "08:03", "08:25", "08:42",
    "09:05", "09:21", "09:45", "10:00", "10:25", "10:39", "11:05",
    "11:18", "11:45", "11:57", "12:25", "12:36", "13:00", "13:15",
    "13:40", "13:54", "14:15", "14:33", "14:50", "15:12", "15:25",
    "15:51", "16:00", "16:30", "16:50", "17:09", "17:35", "17:48",
    "18:15", "18:27", "18:50", "19:06", "19:25", "19:45", "20:00",
    "20:24", "20:48", "21:13"],

    "356":
    ["06:00", "06:30", "06:45", "07:10", "07:24", "07:45", "08:03",
    "08:25", "08:42", "09:05", "09:21", "09:45", "10:00", "10:25",
    "10:39", "11:05", "11:18", "11:45", "11:57", "12:25", "12:36",
    "13:00", "13:15", "13:40", "13:54", "14:15", "14:33", "14:50",
    "15:12", "15:25", "15:51", "16:00", "16:30", "16:50", "17:09",
    "17:35", "17:48", "18:15", "18:27", "18:50", "19:06", "19:25",
    "19:45", "20:00", "20:24", "20:48", "21:13", "21:45"],

    "360":
    ["06:06", "06:20", "06:32", "06:44", "06:56", "07:08", "07:20",
    "07:32", "07:44", "07:57", "08:10", "08:23", "08:37", "08:51",
    "09:05", "09:20", "09:35", "09:50", "10:05", "10:20", "10:35",
    "10:50", "11:05", "11:19", "11:33", "11:47", "12:01", "12:15",
    "12:29", "12:43", "12:57", "13:11", "13:25", "13:39", "13:53",
    "14:07", "14:21", "14:35", "14:49", "15:03", "15:17", "15:30",
    "15:43", "15:56", "16:09", "16:22", "16:35", "16:48", "17:01",
    "17:14", "17:27", "17:40", "17:54", "18:08", "18:22", "18:36",
    "18:50", "19:04", "19:18", "19:32", "19:46", "20:00", "20:15",
    "20:30", "20:45", "21:00", "21:15", "21:30", "21:45", "22:01"],

    "365":
    ["06:25", "06:40", "06:55", "07:10", "07:20", "07:30", "07:40",
    "07:55", "08:10", "08:25", "08:40", "08:55", "09:10", "09:27",
    "09:44", "10:01", "10:16", "10:31", "10:46", "11:01", "11:16",
    "11:31", "11:46", "12:01", "12:16", "12:31", "12:46", "13:01",
    "13:16", "13:31", "13:46", "14:01", "14:16", "14:31", "14:46",
    "15:01", "15:16", "15:31", "15:44", "15:57", "16:10", "16:23",
    "16:36", "16:49", "17:02", "17:15", "17:30", "17:45", "18:00",
    "18:15", "18:30", "18:45", "19:00", "19:15", "19:30", "19:45",
    "20:00", "20:15", "20:30", "20:45", "21:00", "21:15", "21:30",
    "21:45", "21:55"],

    "447": [
    "05:55", "06:30", "07:15", "09:20", "10:20", "11:05", "14:00",
    "15:20", "16:15", "18:00", "19:30", "20:20", "21:25"],

    "455": [
    "06:30", "07:10", "08:00", "08:50", "09:50", "10:50", "11:50", 
    "12:50", "13:50", "14:50", "15:40", "16:50", "17:40", "18:50", 
    "20:00", "21:10"],

    "473": [
    "08:06", "11:21", "14:46", "17:56", "20:56"],

    "477": [
    "06:00", "06:40", "07:20", "08:10", "09:00", "10:00", "10:50", 
    "11:50", "12:50", "14:00", "15:00", "16:00", "16:50", "17:40", 
    "18:30", "19:20", "20:05", "20:50", "21:40"],

    "3003": ["22:24", "23:15"]
}

# 현재 시간을 가져오는 함수
def get_current_time():
    now = datetime.now()
    return now.hour * 60 + now.minute  # 현재 시간을 총 분 단위로 변환

# 30분 이내 출발하는 버스를 찾는 함수
def find_bus_in_30min():
    current_min = get_current_time()  # 현재 시간 (분 단위)
    end_min = current_min + 30  # 30분 후 시간 (분 단위)

    result = []

    # 각 버스 시간표를 확인
    for bus, times in 시간표.items():
        for time in times:
            hour, minute = map(int, time.split(":")) # "08:00" → ["08", "00"] 꼴로 변경한 뒤 정수꼴로 변경
            total_min = hour * 60 + minute  # 버스 시간을 분 단위로 변환 ex)8:00 → 480

            # 30분 이내에 출발하는 버스만 남겨요
            if current_min <= total_min <=  end_min:
                result.append((bus, time)) #bus는 노선 번호 time은 다이어 상 출발시간

    # 남긴 결과를(버스시간) 먼저 출발하는 순서대로 정렬
    result.sort(key=lambda x: x[1])
    return result

출발버스찾기 = find_bus_in_30min()

# 웹 루트 경로
@app.route("/")
def index():
    출발버스찾기 = find_bus_in_30min()
    현재시간 = datetime.now().strftime("%H:%M")
    return render_template("index.html", buses=출발버스찾기, time=현재시간)

# JSON API
@app.route("/api/buses")
def buses_api():
    출발버스찾기 = find_bus_in_30min()
    return jsonify(출발버스찾기)

if __name__ == "__main__":
    app.run(debug=True)

# # 최종 출력
# print("현재 시간:", datetime.now().strftime("%H:%M"))
# print("제주대학교 정문 \n곧 출발하는 버스:")
# if 출발버스찾기:
#     for bus, time in 출발버스찾기:
#         print(f"{bus}번 버스 - {time}")
# else:
#     print("30분 이내 출발하는 버스가 없습니다.")


# 보완할_점 = [시간표 자동 크롤러 추가, 제주시 동부노선 추가, 서쪽 동쪽 정류장 별 알림 추가, 평일/휴일 시간표 맞춰서 안내]